Binary files /sys/src/cmd/rio/7.out and rio/7.out differ
diff -Nur /sys/src/cmd/rio/dat.h rio/dat.h
--- /sys/src/cmd/rio/dat.h	Sun Feb 14 20:23:21 2021
+++ rio/dat.h	Thu Feb 18 21:15:02 2021
@@ -346,8 +346,11 @@
 char		*startdir;
 int		sweeping;
 int		wctlfd;
+int		capsfd;
+Channel		*capsc;
 char		srvpipe[];
 char		srvwctl[];
+char		srvcaps[];
 int		errorshouldabort;
 int		menuing;		/* menu action is pending; waiting for window to be indicated */
 int		snarfversion;	/* updated each time it is written */
Binary files /sys/src/cmd/rio/data.7 and rio/data.7 differ
diff -Nur /sys/src/cmd/rio/data.c rio/data.c
--- /sys/src/cmd/rio/data.c	Sun Feb 14 20:23:21 2021
+++ rio/data.c	Thu Feb 18 21:15:18 2021
@@ -175,8 +175,10 @@
 void
 iconinit(void)
 {
-	background = allocimage(display, Rect(0,0,1,1), RGB24, 1, 0x777777FF);
 
+	background = readimage(display, 0, 0);
+	if (background == nil)
+		background = allocimage(display, Rect(0,0,1,1), RGB24, 1, 0x777777FF);
 	/* greys are multiples of 0x11111100+0xFF, 14* being palest */
 	cols[BACK] = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0xFFFFFFFF^reverse);
 	cols[BORD] = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0x999999FF^reverse);
Binary files /sys/src/cmd/rio/fsys.7 and rio/fsys.7 differ
diff -Nur /sys/src/cmd/rio/fsys.c rio/fsys.c
--- /sys/src/cmd/rio/fsys.c	Sun Feb 14 20:23:21 2021
+++ rio/fsys.c	Fri Feb 19 22:32:58 2021
@@ -50,6 +50,7 @@
 
 char	srvpipe[64];
 char	srvwctl[64];
+char	srvcaps[64];
 
 static	Xfid*	filsysflush(Filsys*, Xfid*, Fid*);
 static	Xfid*	filsysversion(Filsys*, Xfid*, Fid*);
@@ -115,6 +116,9 @@
 	return 0;
 }
 
+void
+capsproc(void *v);
+
 Filsys*
 filsysinit(Channel *cxfidalloc)
 {
@@ -142,6 +146,12 @@
 	post(srvwctl, "wctl", p0);
 	close(p0);
 
+	if(cexecpipe(&p0, &capsfd) < 0)
+		goto Rescue;
+	snprint(srvcaps, sizeof(srvcaps), "/srv/riocaps.%s.%lud", fs->user, (ulong)getpid());
+	post(srvcaps, "caps", p0);
+	close(p0);
+
 	/*
 	 * Start server processes
 	 */
@@ -150,6 +160,12 @@
 		error("wctl channel");
 	proccreate(wctlproc, c, 4096);
 	threadcreate(wctlthread, c, 4096);
+
+	capsc = chancreate(sizeof(char*), 0);
+	if(capsc == nil)
+		error("caps channel");
+	proccreate(capsproc, capsc, 4096);
+
 	proccreate(filsysproc, fs, 10000);
 
 	/*
@@ -713,4 +729,32 @@
 	d.atime = clock;
 	d.mtime = clock;
 	return convD2M(&d, buf, nbuf);
+}
+
+void
+capsproc(void *v)
+{
+	char *s;
+	int n, eofs;
+	Channel *c;
+
+	threadsetname("CAPSPROC");
+	c = v;
+
+	eofs = 0;
+	for(;;){
+		if((s = recvp(c)) == nil)
+			break;
+		n = write(capsfd, s, strlen(s));	/* room for \0 */
+		free(s);
+		if(n < 0)
+			break;
+		if(n == 0){
+			if(++eofs > 20)
+				break;
+			continue;
+		}
+		eofs = 0;
+	}
+	close(capsfd);
 }
Binary files /sys/src/cmd/rio/rio.7 and rio/rio.7 differ
diff -Nur /sys/src/cmd/rio/rio.c rio/rio.c
--- /sys/src/cmd/rio/rio.c	Sun Feb 14 20:23:21 2021
+++ rio/rio.c	Thu Feb 18 21:15:02 2021
@@ -336,6 +336,7 @@
 			write(window[i]->notefd, "hangup", 6); 
 }
 
+int capsdown = 0;
 void
 keyboardthread(void*)
 {
@@ -344,9 +345,22 @@
 	threadsetname("keyboardthread");
 
 	while(s = recvp(kbdchan)){
-		if(*s == 'k' || *s == 'K')
-			shiftdown = utfrune(s+1, Kshift) != nil;
-		if(input == nil || sendp(input->ck, s) <= 0)
+		int caps = (*s == 'K' && capsdown && !shiftdown);
+		if(*s == 'k') {
+			if (utfrune(s+1, Kshift) != nil) {
+				shiftdown = 1;
+			} else if (utfrune(s+1, Kcaps) != nil) {
+				capsdown = 1;
+			}
+		} else if(*s == 'K') {
+			shiftdown = capsdown = 0;
+		}
+		if (capsc != nil && caps) {
+			char *caps = strdup("caps\n");
+			if (sendp(capsc, caps) <= 0)
+				free(caps);
+			free(s);
+		} else if(input == nil || sendp(input->ck, s) <= 0)
 			free(s);
 	}
 }

